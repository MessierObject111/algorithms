package com.alg.generic;

import java.time.Duration;
import java.time.Instant;
import java.util.ArrayList;

public class MaxProdOfThreeNums {
    /**
     * Given an integer array, find three numbers whose product is maximum and output the maximum product.
     *
     * Example 1:
     *
     * Input: [1,2,3]
     * Output: 6
     *
     *
     * Example 2:
     *
     * Input: [1,2,3,4]
     * Output: 24
     *
     *
     * Note:
     *
     * The length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].
     * Multiplication of any three numbers in the input won't exceed the range of 32-bit signed integer.
     *
     */
    public static void main(String[] args) {
        Instant start = Instant.now();

        //Measure execution time for this method

//        int[] input = {1,2,3,4};
        int[] input = {-925,-429,515,260,538,-338,-453,159,683,782,597,433,349,-846,816,551,-359,46,14,38,-295,952,-359,741,82,50,-413,-246,600,745,891,-433,209,394,302,-472,687,354,-368,-23,-454,-302,367,-230,-850,-84,318,-578,384,132,352,-933,922,-821,980,9,-46,-315,-489,952,490,387,-547,-219,-386,152,810,-202,259,228,-585,-997,349,316,-278,-354,719,820,-527,-485,400,267,604,643,-302,806,972,-385,820,-4,-660,-649,-541,972,319,211,-694,76,649,-740,-164,-788,627,717,-814,407,-186,-147,-953,-19,-519,-657,-312,346,-149,950,330,-376,-319,-4,922,-896,210,-753,-408,-86,-713,-840,-94,141,472,502,245,105,824,556,-183,696,790,-571,383,421,-770,-348,-67,-469,-102,-457,890,916,-526,842,-422,749,-378,785,532,299,753,867,-105,418,-598,142,536,974,59,771,-102,720,-101,-791,24,274,911,39,-560,-456,2,-894,861,412,-115,287,993,518,253,84,-901,6,-200,-395,-709,-479,-215,-653,-454,681,61,565,274,860,-287,935,75,902,-471,-647,243,161,-505,367,-517,417,-809,-423,692,693,-637,573,-526,-18,-863,808,300,316,297,-11,-175,-186,-346,-519,-581,-950,138,-967,-512,-652,-803,599,-407,726,321,600,-388,856,-502,-296,767,269,453,219,550,338,690,508,-687,68,-742,806,206,86,50,124,555,848,-267,-772,671,515,262,-702,124,-266,385,-8,45,-858,447,-902,927,547,-16,-430,-201,-254,-78,-958,-980,-629,-207,-812,-479,-386,-696,656,891,-9,702,-976,705,866,989,-501,919,-508,-82,126,-491,-758,424,85,256,665,-32,-698,-921,-820,64,459,718,-641,992,803,-90,-603,-399,536,83,-786,-937,-207,947,-339,866,-889,916,-246,-217,-559,-324,95,425,-181,-495,-649,728,-941,-923,-688,281,793,794,8,-360,98,-49,-462,-963,-929,-715,-871,747,179,-589,1,-747,549,-338,548,-563,-654,-717,80,570,-206,677,-29,359,-128,-800,-422,-520,941,-241,136,-253,616,528,-383,-724,-846,-552,-583,-367,-254,342,696,-763,799,105,-565,-968,260,-707,-818,-638,-370,-709,-903,-601,93,945,944,-502,-662,-184,727,-178,442,614,-216,950,-420,980,-861,-559,-413,764,-971,-646,-988,-341,-161,289,36,461,988,-951,948,959,-633,951,625,411,511,651,-799,109,-771,735,506,208,-978,-149,-617,-156,-376,-957,-110,604,415,-389,-922,497,-481,638,462,777,352,-979,899,-166,-757,999,159,181,-209,672,-220,14,-462,-80,861,-628,140,-32,-666,-9,487,425,59,193,-693,-319,-549,285,-88,-366,933,41,663,-459,-285,601,622,398,-340,-718,64,-93,783,91,577,168,-644,-13,-3,735,612,853,795,-262,-594,767,-9,-236,735,-480,878,980,-218,-396,-103,-591,-177,-198,-104,243,-7,-983,715,779,415,688,419,-746,-369,-687,-119,-233,-223,439,197,-474,189,-142,-202,-35,81,-244,229,-910,-597,-712,711,-750,335,586,264,803,794,-97,-375,843,-631,166,-558,-39,-439,-152,-426,630,-90,393,108,98,-798,249,-774,-14,84,576,-938,-253,845,-837,-45,550,-429,298,999,286,-847,-854,-820,-930,-182,216,-963,-965,134,-381,502,767,-874,-11,148,-288,-351,-199,-238,446,-328,-922,651,-879,-669,-48,-745,-453,746,-955,-714,-521,454,24,172,-612,-497,-908,376,940,-767,-86,250,676,700,-61,348,29,-681,-970,-288,-369,887,34,-385,454,578,237,-88,8,-476,312,-523,802,-336,711,480,505,-247,-745,-660,-838,-290,-117,328,762,140,-374,892,119,312,996,836,690,-61,-231,-953,596,-985,-371,770,-284,-694,427,-931,-236,-28,-701,-56,-9,493,650,-244,-345,910,-853,-450,917,-484,261,-923,790,880,-667,-685,464,475,560,-874,392,-465,-345,52,303,-352,-698,213,-193,952,-755,-405,834,-335,-11,-33,68,616,-57,-848,571,603,-146,-301,-280,915,372,-253,796,-538,727,-312,-744,-421,550,1000,146,-552,-925,-366,-678,-309,-166,-205,-354,-561,-575,-292,708,677,-636,-502,686,-445,257,943,79,196,-59,948,-599,-28,-170,-206,328,297,-981,492,-378,-761,532,-154,-976,677,162,327,-333,802,-335,912,953,-543,39,902,952,-881,608,621,-263,210,-109,856,-663,601,377,528,-492,880,35,534,311,-363,689,772,578,-607,-165,-95,-903,850,581,-834,767,-402,-402,-904,863,577,-594,-796,71,24,956,23,-926,463,290,833,-780,-95,405,206,-125,-673,491,-766,337,730,382,-105,158,-827,184,-556,-352,-570,-295,-204,23,-785,267,-258,976,-413,891,-102,369,716,-553,-761,380,159,-950,-552,198,-535,-909,-854,-216,105,10,306,-491,993,915,-109,-326,796,329,695,304,750,-671,924,-430,252,416,959,-84,282,665,-237,-721,-11,154,990,-847,941,-840,-128,-138,923,571,-352,-419,-495,830,483,541,638,-655,408,-382,995,-212,-659,36,-795,182,-894,348,920,938,504,147,-163,-462,96,355,581,243,-494,-494,248,-331,394,-515,-912,761,-735,-662,536,-455,-90,-385,885,-780,-656,16,-155,744,170,927,996,804,-528,-534,-824,-709,887,458,-767,769,647,-381,328,9,-709,-765,588,636,-464,346,-396,-601,510,-793,-506,-254,-233,-116,-681,284,572,820,-838,-260,803,-27,-921,-652,-276,171,758,-70,497,23,-967,-739,956,-904,-227,62,797,305,-852,-831,-833,-829,821,-726,-328,-580,820,-122,-880,9,-393,803,-735,-7,0,935,-798,728,-493,910,-293,264,876,885,567,91,800,-603,486,203,287,444,917,750,-800,-24,513,-871,-134,-61,269,-567,329,-326,371,-544,887,15,-679,-743,810,234,-347,-649,963,539,-387,-349,-787,297,-790,98,87,804,-544,-49,79,195,417,784,-981,-833,-855,778,828,518,-72,-502,78,-512,-520,-946,-742,641,-299,105,942,-479,213,80,-932,213,217,777,766,762,815,-787,-858,53,-98,-532,-519,375,361,-473,-573,-208,410,-180,417,311,664,-153,679,62,-828,-681,910,664,-396,376,-821,-686,777,391,-255,-290,-53,-148,896,-637,228,-340,-58,-191,716,-286,-871,-44,107,934,201,122,779,449,-302,-796,-541,-777,-537,-25,-664,-278,168,-468,488,457,-719,-959,-466,658,986,-995,289,922,-297,385,706,212,-553,-552,404,-950,978,-606,635,624,-299,241,515,-70,-661,494,792,83,-812,-6,-198,779,-319,465,745,-197,19,-774,-793,725,72,-445,950,769,845,929,344,313,-392,-417,-887,222,-555,-573,-9,106,389,-740,-718,818,-840,-103,-656,481,265,677,786,-930,58,-602,-634,318,-448,-571,-153,408,242,133,-137,-126,721,-31,-530,362,199,-335,378,114,710,842,748,-554,343,-799,754,-817,-701,-621,219,361,750,-448,-523,-956,436,742,618,-190,-663,609,-199,180,658,-780,-352,348,397,56,-595,-381,-351,-357,-995,-665,-891,839,691,-299,353,473,-403,-130,281,762,-70,359,-361,-838,-184,-761,771,811,922,19,604,-113,-298,-951,130,-345,-640,39,120,908,-414,-345,217,-630,198,403,-457,635,-282,787,-311,837,-681,376,68,-141,117,-376,-1,-318,-524,116,-707,223,713,707,-917,207,-390,377,593,-469,729,-393,528,480,536,-621,163,-10,-95,-279,338,-278,-316,-902,950,887,-128,-268,651,376,677,275,-835,-535,-343,-359,863,166,344,-538,869,123,371,57,-903,-692,-123,623,-626,-960,-665,89,62,675,545,-693,-312,-763,-213,856,969,285,-156,-974,-816,975,-895,327,-378,895,173,-360,-134,444,-563,-691,46,-927,495,342,533,669,-36,-577,622,-593,-560,-722,-423,-130,101,684,-410,939,-729,760,706,-501,198,319,-230,-625,926,-196,-397,875,-37,-162,-381,821,-917,-320,95,381,-457,-967,436,-910,697,625,60,-299,-620,441,-480,137,450,567,-727,102,272,290,-55,69,-73,155,-60,661,-250,-76,-160,-642,839,882,-938,30,815,-497,30,160,-862,-29,-761,-758,825,138,998,642,-141,830,254,430,342,-652,779,752,-628,946,-285,-485,209,-44,156,767,-428,-276,-8,-10,-648,-775,-261,-595,-973,428,-254,879,458,534,425,806,910,627,-309,-637,587,-140,-544,-137,698,592,-741,-507,-596,578,-430,-785,-495,229,541,-526,628,-716,-872,805,-33,-325,-345,112,0,-996,233,759,-261,-761,862,-580,-309,97,111,820,-49,-90,75,717,-669,-455,-298,-511,-130,498,540,-493,823,-702,76,544,-268,588,124,-769,803,-766,943,930,679,-626,-21,-551,-848,-201,-421,-444,553,-247,790,-873,-369,-906,110,-462,-28,-98,579,362,-801,280,689,-308,347,336,-489,-528,831,799,-936,-427,-481,-89,319,181,218,205,49,226,598,-402,580,450,-340,-48,600,-198,-720,347,-521,778,872,-958,-564,222,-763,740,-707,-993,311,9,-387,-228,-975,131,-774,-755,-851,405,-784,-165,682,-896,761,-624,177,995,768,-991,810,-201,670,557,922,913,-89,-937,-302,179,-858,267,608,44,-23,-140,-364,160,-529,-502,934,-797,-578,-20,-987,-704,973,-28,508,-428,-307,15,-287,-894,-202,914,23,-575,-846,364,-202,590,263,-835,817,719,-320,184,-288,251,-189,-78,-760,-814,-805,-297,284,-176,-183,528,-2,-794,438,169,-656,-917,751,258,77,-779,-653,574,-451,-476,-786,220,-354,512,-82,-756,-992,836,249,826,559,-691,812,-948,-124,295,-626,-806,-766,-606,-637,271,961,-374,-298,-852,-869,485,979,732,177,-505,747,444,181,-872,378,-979,-908,186,-442,576,-173,-693,-27,775,-162,-967,507,265,-930,-173,-842,-844,457,-234,-808,-762,975,722,338,484,-870,483,871,537,157,259,430,765,-428,495,410,-284,176,-403,498,884,-890,-89,-536,345,500,727,287,13,-545,115,961,736,741,794,88,-464,892,632,-60,335,829,938,386,-568,-671,872,-696,14,-756,-721,-377,-746,-653,439,322,972,-270,-882,-404,-575,810,-790,192,306,-81,-113,538,-402,-890,882,415,260,-603,967,-704,-750,39,-77,47,180,328,-816,-455,503,-341,66,532,799,131,554,-876,334,710,-19,976,551,518,-146,46,896,371,-527,758,163,410,526,255,200,475,569,-51,737,-934,494,-433,766,67,623,-913,-288,-451,-932,704,-865,974,-206,-930,-256,891,317,-784,920,-568,-900,149,676,437,862,-497,340,116,784,529,-578,-945,336,66,-328,-256,-33,127,-224,-592,388,939,-242,283,-17,343,324,286,474,815,731,347,-465,-708,-383,-668,-897,43,596,-115,162,-47,-39,421,-67,219,343,-302,0,-862,-62,-717,-389,-890,-892,240,-240,536,743,-658,942,-319,974,91,-279,385,777,-602,541,-246,-355,397,684,-524,-488,-915,-764,349,-761,-500,-908,-63,594,990,-855,262,-842,870,234,-292,28,181,279,188,721,889,828,764,272,248,79,-869,44,59,72,102,-723,-551,312,-980,-233,294,621,-377,73,-508,955,-138,-234,917,-815,-374,234,327,-704,724,167,-269,-396,920,954,806,-72,
                738,-969,276,-572,-158,683,-328,-316,-92,23,372,117,-238,-324,-566,-602,-944,-239,953,-273,972,-878,233,851,960,-973,661,-84,-866,809,-360,881,482,-375,-323,725,-839,-413,-445,-485,846,387,760,-620,326,885,816,-431,-705,165,823,664,-614,-884,-171,136,-771,-635,313,-53,-159,-81,-350,-678,360,873,233,42,-789,709,-264,-711,542,891,911,116,-444,-124,524,35,208,-742,-853,423,395,889,690,419,-419,57,-622,662,-695,-400,-310,229,-463,-525,439,151,642,730,-878,-526,145,-256,-323,-794,-502,-218,51,949,804,-126,181,135,-950,-268,-452,-789,945,-891,-210,-183,-571,932,952,82,697,-885,718,-574,-201,-865,-561,-122,-64,615,-579,-381,-309,257,-554,-232,-787,915,-115,711,929,-945,-467,-383,56,831,419,-165,375,-36,-598,-170,-956,552,803,-557,-966,459,711,-979,-143,303,-533,-562,963,237,70,51,594,574,-212,-275,617,370,347,-232,-370,-281,-876,910,959,369,183,-475,-882,694,-851,290,186,725,183,702,711,993,116,-762,-941,-513,-969,532,-544,-782,-414,643,-199,692,833,-282,-568,436,251,916,-760,692,212,-930,-410,-2,158,677,-375,384,-470,-528,-415,-10,-307,-970,483,194,-250,-140,-435,581,830,26,725,-177,-223,-925,-165,-615,-168,-86,-499,622,-948,-565,207,-841,730,-548,742,409,831,-464,596,-995,539,305,-16,967,268,-932,129,-944,399,852,577,524,-878,86,-817,207,969,-601,590,-740,-648,-395,294,873,-777,-971,155,170,128,118,-826,568,908,982,-558,757,-759,-538,-822,790,580,362,-447,381,966,-406,-136,-84,-361,164,587,-75,736,795,-493,492,-304,-917,-494,-241,-891,807,685,304,-496,-913,917,-713,-964,154,548,317,-224,610,286,278,-980,160,-1,606,524,-333,22,-475,-944,144,918,543,17,-156,-582,491,726,536,168,682,-739,548,-513,-659,-495,-620,612,-875,-282,-733,257,522,653,-14,955,713,455,828,56,-213,403,849,-659,372,-540,-157,304,58,-349,-184,-539,-450,536,-383,-468,-638,78,553,895,-686,-191,44,617,-125,-427,-384,116,-939,297,-161,205,827,424,-833,-572,259,-379,503,-969,730,-502,578,-538,441,-898,-681,708,527,-106,642,-462,803,805,37,632,-740,615,-847,236,415,-582,-430,581,-347,-615,-759,88,-456,690,-263,57,937,-126,242,956,-902,-516,882,873,281,-625,73,-582,65,561,954,631,-168,131,680,832,727,-510,-798,813,767,494,-589,676,686,222,115,-375,227,968,-295,125,479,-673,-641,79,721,-436,-549,532,724,218,913,-877,-107,899,-90,-613,-102,502,227,629,9,-36,812,-321,943,631,625,346,706,-872,259,-623,-518,976,590,-602,-165,578,219,-15,-760,626,727,427,-56,823,921,-36,3,199,-49,26,779,-974,-244,-762,-378,150,886,-587,-93,638,27,31,-160,979,721,-618,-387,843,-992,-114,-573,262,294,-661,-695,552,-747,-153,-523,-29,-689,-135,555,-464,-857,877,271,-278,-817,-756,971,848,326,-89,-471,-443,-216,288,530,336,-882,74,-998,987,554,-954,-232,869,699,681,227,700,376,540,-759,-527,-33,91,-68,726,-877,430,-297,-281,158,-709,-552,-123,-586,308,671,820,261,328,806,772,707,-271,-570,202,329,-583,-274,-39,325,29,196,-870,-36,892,-413,-857,-340,176,635,-951,-263,119,-750,935,-803,834,536,58,722,-515,-316,-875,347,-836,-172,-725,189,-911,397,762,-138,100,136,-760,780,374,440,-318,272,697,448,210,650,-84,66,-666,872,-881,-885,-207,85,216,912,-635,-864,693,760,589,-359,45,-548,-529,818,996,-904,339,-968,-809,669,847,112,37,262,-637,504,987,423,-848,169,-912,-888,192,582,-812,-450,654,970,-403,-784,-555,899,645,-147,-984,962,4,708,-322,948,14,677,-571,671,-201,122,557,524,-250,-973,-260,-878,-943,-530,-892,64,-897,-89,-757,428,581,696,890,662,808,257,939,-849,-629,118,-420,-8,469,-384,983,-698,-1,-637,681,518,261,107,-93,-152,228,225,438,890,323,-739,-215,913,-936,-949,998,112,-748,-705,-963,-949,926,288,-282,-710,96,-544,376,740,257,628,-421,-164,-206,644,-603,-874,781,-661,86,3,627,734,107,443,-858,378,-883,-853,-761,-921,-47,-514,886,-348,490,561,-607,-324,-739,-161,446,857,-158,-370,208,477,203,557,132,670,215,137,-959,0,229,178,334,-980,-995,-408,-701,378,-395,52,718,687,-518,320,-205,474,-349,66,909,-313,-878,415,13,811,85,-959,436,-59,-34,-908,-177,369,-691,-358,-107,70,-61,-40,-61,913,539,-303,511,535,-941,781,-675,239,-483,565,869,-556,23,721,-517,-994,-431,-756,-947,-611,-681,-290,-324,858,-175,-911,705,-337,-194,415,42,-167,-651,996,-371,792,464,393,-340,974,-174,15,443,-235,341,508,-630,-764,192,-757,747,965,209,557,-897,94,-831,633,-663,642,-1,-879,157,-830,-543,-486,-973,560,-729,811,-652,121,22,643,119,-62,-58,546,-997,-527,807,365,-447,770,-819,19,108,-48,929,171,-653,823,415,-862,-897,-683,-130,-260,291,931,-359,326,687,467,-986,158,-878,-709,445,-210,-56,-428,-710,933,-54,-805,967,376,450,587,-953,-607,-231,689,-112,822,-887,530,791,-739,272,580,763,181,165,351,-651,226,879,-562,-231,-767,505,-279,-881,-752,656,-448,603,449,160,604,840,-473,-923,32,-426,610,799,-329,867,-537,-110,-405,163,224,-271,836,729,406,-576,204,81,203,-157,-154,374,-9,120,-687,-122,403,-223,-692,136,443,-419,-163,326,479,-871,-739,451,916,170,590,24,89,-580,-309,-910,614,689,53,-142,512,452,303,-820,818,637,966,453,382,-162,-999,-262,-833,15,635,-957,418,-357,497,-343,984,-299,266,-462,819,964,297,-86,-206,977,975,-179,874,-545,780,290,-654,-607,-836,169,713,-396,-706,-256,-341,613,-284,-713,-354,-576,503,-8,918,571,-831,-119,346,-829,147,-197,-635,-977,-1,-498,-996,-918,794,-201,722,-883,506,-562,-315,153,172,703,227,-168,405,-843,882,594,376,-529,-337,-675,-773,620,-89,-667,51,-128,-998,580,-130,753,588,735,226,299,-807,-584,66,251,-630,65,-692,999,-131,-651,824,561,-133,274,-965,458,841,-824,268,144,-191,-742,-81,879,-13,-893,754,635,-357,-364,436,730,-308,-459,110,-402,-476,914,993,484,-669,609,410,838,-542,405,669,917,68,-587,873,-187,-492,540,396,398,874,-650,-211,-715,427,986,653,488,219,792,-334,463,771,144,69,-754,674,-75,436,454,-698,-125,654,-829,753,-766,-956,985,-27,320,139,101,-172,-489,-575,-143,-764,-626,105,963,995,475,793,-831,-853,415,-634,171,630,740,464,329,-240,549,-990,-56,-9,-369,-398,-618,329,684,-41,792,-181,538,-245,580,770,368,-939,-531,-255,761,-137,664,-544,-540,-486,29,99,133,294,-821,840,329,-929,212,156,796,743,191,332,-868,734,487,279,-229,-53,801,249,552,-133,-623,-345,-40,-88,-793,517,740,796,-119,545,894,628,-59,-835,-627,-420,-917,-812,-506,-828,287,-287,235,-775,-445,-700,-429,-573,281,-625,-647,31,140,-844,319,884,504,124,735,-50,-273,138,517,-226,-854,258,-883,-408,531,241,-733,-541,-400,709,370,105,-223,600,-487,-477,-381,915,178,895,-473,-996,961,-324,235,-632,914,66,170,-355,-198,67,674,-120,-665,-231,-53,49,744,418,-826,-226,318,-541,27,123,-145,167,87,-11,727,816,-405,789,-352,705,-533,-144,16,-941,271,-683,-935,313,-985,888,-389,-155,-719,-982,832,344,-194,-84,980,-533,-441,-65,910,-846,117,-595,154,431,-673,-642,-475,871,440,141,-407,-835,566,399,571,-965,-187,279,-160,-404,877,-154,43,-745,727,-712,-786,763,-798,884,-116,50,-614,134,-305,-350,235,-539,321,-971,-952,710,-323,-548,943,-109,-105,897,398,-436,-873,-886,-638,-600,313,-244,412,-642,-42,267,-784,-659,-49,58,-591,-158,-923,19,632,-411,-856,-751,-501,-72,-914,522,856,110,-57,239,-819,391,-199,-1,-351,191,213,-844,-397,192,326,-720,636,444,241,-920,664,625,784,-928,460,71,-671,-689,-939,465,484,-158,-197,88,346,-686,-526,-337,-411,430,-730,372,-960,-3,527,-176,-183,673,-345,36,-587,869,905,-780,474,-265,32,-623,-83,31,-846,572,-776,-894,-197,765,162,168,-777,-989,236,119,993,-822,-270,112,-95,-464,-266,747,-911,-766,-613,308,-466,820,-243,864,698,596,-1,868,-941,406,-747,-22,-228,-502,820,-346,710,822,44,-843,496,782,-198,-54,-593,319,-436,-310,351,-395,710,-890,657,457,-319,226,-694,-587,831,885,285,770,967,-414,-799,-578,-97,-73,651,-807,-451,-586,-733,583,-945,-670,600,903,459,37,-674,-565,94,-91,601,-14,85,280,-728,-712,-464,426,912,-484,-851,-941,-790,-807,-737,117,-821,935,-771,970,537,-508,918,-108,-64,-904,-351,-140,-384,74,784,-972,-655,987,781,-922,-667,-241,118,828,-106,-942,858,-837,70,-683,945,-712,765,460,11,-700,-878,734,-59,339,192,318,-151,-483,685,-626,1000,-155,-116,283,731,-955,-69,790,544,841,684,23,310,-523,892,-125,208,-644,-344,-570,529,-188,971,68,-157,821,441,-997,5,-664,465,482,757,-362,-88,-743,286,711,-928,-389,975,325,238,-880,692,-39,63,106,156,-290,-795,-945,460,-501,-987,-784,-105,109,-210,-471,-837,-920,379,895,-828,88,-159,753,692,-800,-46,503,977,-984,-340,558,-182,-477,-934,613,130,241,437,558,-622,983,243,198,-79,702,691,74,604,-124,351,-55,-584,968,620,-824,-864,-504,276,-60,-240,-222,813,-800,-48,-65,-964,580,-88,-82,-806,277,580,349,-760,-670,423,109,-4,-92,-787,-532,-594,-903,-42,877,443,-253,359,-254,-299,592,236,-556,-640,921,303,987,-691,174,-653,-514,-667,979,692,-221,831,169,-531,-940,-537,203,-664,717,339,779,185,-153,-641,1,867,-568,946,40,-345,517,493,886,-446,106,125,592,978,868,-25,-906,474,440,165,950,889,-867,-165,964,-294,856,335,19,14,590,829,861,-57,574,362,500,256,961,-724,481,-102,316,-64,-247,230,-305,392,-901,886,-783,-17,502,-734,894,-870,131,695,716,-509,-524,-329,-622,-770,397,427,-406,-725,731,-943,-901,-732,-218,854,466,599,-461,686,995,819,252,708,-218,-248,-50,-627,196,-364,575,-120,-292,-513,255,-555,859,-452,994,868,261,-53,397,-595,887,875,-780,510,181,218,643,-396,886,-900,-245,-765,-468,800,-601,-361,-749,697,682,929,-835,138,-103,-669,-662,113,366,-716,-129,808,344,710,-35,-859,682,912,-369,504,90,-970,377,137,977,-530,600,812,606,-301,-784,-343,771,882,-711,-857,332,167,54,278,-117,324,-416,-24,384,965,-848,521,277,661,613,738,39,221,-731,491,-63,-696,-245,-36,-352,520,-181,141,435,525,-961,748,-835,-805,-620,861,429,200,571,-708,-198,138,-759,382,524,135,790,-167,-611,68,713,416,-90,694,11,-214,286,516,-990,611,545,-517,-850,746,-587,90,463,995,-904,-743,-485,-645,840,-253,-102,-617,617,-435,412,-278,-389,-973,-278,846,262,-799,921,-231,-541,-882,-401,-797,-619,-597,-461,475,921,900,-686,244,195,67,-362,682,220,-615,-517,423,22,-286,870,-575,-327,-921,-777,203,405,-242,350,648,-846,235,-193,991,83,393,771,34,-96,-276,337,-519,-863,531,-464,53,-494,543,8,-298,593,-499,828,-860,388,710,154,-921,535,-559,-491,-403,234,-631,25,-137,-477,-102,301,-938,138,788,-975,-964,729,796,325,73,-667,-38,-434,-710,-925,386,-529,897,-802,-942,356,804,664,-926,32,499,-394,-407,851,-673,557,300,621,-311,796,-435,-361,237,228,314,-562,106,-513,410,-941,-936,-419,336,883,301,-773,80,446,-171,360,127,-479,755,525,507,-925,981,-457,-467,-116,-891,-758,-184,132,-457,-14,305,-462,621,991,-564,-246,-824,-657,-147,339,-500,-817,-785,-357,4,495,-350,-1,990,351,994,773,556,65,613,-611,-357,584,122,-560,-38,-544,194,-893,-267,439,809,440,326,-496,-786,-172,173,-537,-97,-811,375,-302,296,-604,758,-51,402,804,663,801,124,-443,630,-207,33,-340,567,-835,-90,-126,-203,-372,-896,224,101,537,-66,448,90,-883,817,-770,-759,-566,387,159,-100,345,372,-53,661,257,-78,52,795,99,-933,632,573,-286,-819,-133,-923,409,288,900,-492,252,-938,826,-225,-270,-291,474,732,-249,-202,-482,643,602,636,-781,729,-621,-284,372,-503,338,-266,-846,-909,-435,38,730,830,-404,-600,-728,-588,482,770,-850,-577,-319,589,184,-717,-399,226,-86,-726,-871,934,551,895,212,-273,-317,836,142,-319,277,530,-96,302,709,-265,-829,111,-786,529,453,-96,-713,-593,-419,-155,976,-535,-719,646,-362,429,614,-257,959,864,762,-461,615,-187,-243,-801,52,275,814,359,810,-171,529,403,-509,842,632,-765,270,-106,71,985,635,633,537,542,135,404,-827,-689,171,296,-944,395,-19,-743,-385,844,223,169,-160,950,92,-396,-776,-699,873,-877,-108,387,-969,319,467,-91,53,-598,95,788,-216,428,-610,701,716,-18,-722,930,-25,-772,373,-485,-300,829,-641,-426,777,383,366,-272,-469,78,990,682,-429,448,864,-30,92,75,-199,294,846,727,980,-173,-590,-887,817,-664,-426,-99,-68,955,-578,8,-434,-280,-577,42,469,483,-207,-259,-20,-832,-864,-571,-972,162,489,-657,982,115,-730,47,-118,-177,-317,650,-229,-798,44,-590,-949,-560,-452,-827,690,-7,-291,-315,426,333,532,429,-220,-368,-777,-26,683,-642,-894,85,-395,22,-203,-988,-749,-419,143,655,998,-564,-577,591,-607,-218,-212,415,96,-340,30,473,717,-770,552,692,443,-170,-710,497,-135,-716,639,-178,-760,-366,415,529,-299,-339,-988,817,-51,842,862,-272,-809,860,359,-598,-866,228,-852,393,837,-856,-51,932,-721,-268,-622,-346,-980,652,-119,-91,86,-360,-884,-233,-285,-337,-637,-172,112,950,-950,699,728,267,551,-707,397,-974,406,626,-249,-637,182,-413,-53,427,225,194,611,-18,47,218,-779,-464,-201,703,-463,-755,731,-537,905,9,-151,-744,281,-78,876,-509,46,-924,635,-2,-41,172};
        System.out.println(maximumProduct(input));
        Instant finish = Instant.now();

        long timeElapsed = Duration.between(start, finish).toMillis();  //in millis
        System.out.format("%+,8d%n%n", timeElapsed);
    }

    /**
     * This solution use brute force and has O(n^3) time complexity with O(1) constant space.
     * @param nums
     * @return
     */
    public static int maximumProductBrute(int[] nums) {
        int maxProd = Integer.MIN_VALUE;
        for(int i = 0; i < nums.length - 2; i++) {
            for(int j = i+1; j < nums.length - 1; j++) {
                for(int k = j+1; k < nums.length; k++) {
                    int prod = nums[i] * nums[j] * nums[k];
                    if (prod > maxProd) {
                        maxProd = prod;
                    }
                }
            }
        }
        return maxProd;
    }

    /**
     * Approach 3: Single Scan
     * Algorithm
     *
     * We need not necessarily sort the given numsnums array to find the maximum product. Instead, we can only find the required 2 smallest values(min1min1 and min2min2) and the three largest values(max1, max2, max3max1,max2,max3) in the numsnums array, by iterating over the numsnums array only once.
     *
     * At the end, again we can find out the larger value out of min1 \times min2 \times max1min1×min2×max1 and max1 \times max2 \times max3max1×max2×max3 to find the required maximum product.
     * @param nums
     * @return
     */
    public static int maximumProduct (int[] nums) {
        int min1 = Integer.MAX_VALUE, min2 = Integer.MAX_VALUE;
        int max1 = Integer.MIN_VALUE, max2 = Integer.MIN_VALUE, max3 = Integer.MIN_VALUE;
        for(int n : nums) {
            if (n <= min1) {
                min2 = min1;
                min1 = n;
            } else if (n <= min2) {     // n lies between min1 and min2
                min2 = n;
            }
            if (n >= max1) {            // n is greater than max1, max2 and max3
                max3 = max2;
                max2 = max1;
                max1 = n;
            } else if (n >= max2) {     // n lies betweeen max1 and max2
                max3 = max2;
                max2 = n;
            } else if (n >= max3) {     // n lies betwen max2 and max3
                max3 = n;
            }
        }
        return Math.max(min1 * min2 * max1, max1 * max2 * max3);
    }
}
